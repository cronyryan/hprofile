name: Hprofile Actions

on: 
  workflow_dispatch:  # This allows the workflow to be manually triggered

jobs:
  Testing:
    runs-on: ubuntu-latest

    steps:
      # Checkout the code
      - name: Code checkout
        uses: actions/checkout@v4

      # Run Maven tests
      - name: Maven test
        run: mvn test

      # Run Checkstyle
      - name: Checkstyle
        run: mvn checkstyle:checkstyle

      # Setup Java 11 (required for sonar-scanner)
      - name: Set Java 11
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'  # You can choose other distributions like 'adoptopenjdk'
          java-version: '11'

      # Setup SonarQube Scanner
      - name: Setup SonarQube
        uses: warchant/setup-sonar-scanner@v7

      # Run SonarQube scan with necessary parameters
      - name: SonarQube Scan
        run: |
          sonar-scanner \
            -Dsonar.host.url=${{ secrets.SONAR_URL }} \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }} \
            -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }} \
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }} \
            -Dsonar.sources=src/ \
            -Dsonar.junit.reportsPath=target/surefire-reports/ \
            -Dsonar.jacoco.reportsPath=target/jacoco.exec \
            -Dsonar.java.checkstyle.reportPaths=target/checkstyle-result.xml \
            -Dsonar.java.binaries=target/test-classes/com/visualpathit/account/controllerTest/

      # Check the Quality Gate status.
      - name: SonarQube Quality Gate check
        id: sonarqube-quality-gate-check
        uses: sonarsource/sonarqube-quality-gate-action@master
        timeout-minutes: 5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONA
